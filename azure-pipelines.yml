# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  COMPONENT_NAME_PREFIX: bruno
  COMPONENT_VERSION: v1.0.0
  # adminer
  ADMINER_IMAGE: adminer:4.7.6-standalone
  ADMINER_PORT: 8080
  # db
  POSTGRES_IMAGE: library/postgres:12.2-alpine
  POSTGRES_PORT: 5432
  POSTGRES_DB: docker
  POSTGRES_USER: docker
  POSTGRES_PASSWORD: password123
  # app
  NODE_IMAGE: node:13.12.0-alpine3.11
  APP_PORT: 3000
  # web
  NGINX_IMAGE: nginx:1.17.9-alpine
  WEB_PORT: 80
  # azure
  azureSubscriptionEndpoint: EsSSub
  azureContainerRegistry: brunoacr.azurecr.io

task: DockerCompose@0
  displayName: DockerCompose task
  inputs:
    action: Build services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker-compose.no.local.images.yml
#    projectName: $(Build.Repository.Name)
#    qualifyImageNames: true
#    additionalImageTags: $(Build.BuildId)